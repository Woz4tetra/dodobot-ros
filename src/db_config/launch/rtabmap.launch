<?xml version="1.0" encoding="UTF-8"?>
<launch>
    <arg name="localization"       default="false"/>
    <arg name="database_path"      default="rtabmap.db"/>

    <arg     if="$(arg localization)" name="rtabmap_args"  default=""/>
    <arg unless="$(arg localization)" name="rtabmap_args"  default="--delete_db_on_start"/>

    <!-- <include file="$(find db_config)/launch/rgbd_msgs.launch"/> -->

    <group ns="rtabmap">
        <node name="rtabmap" pkg="rtabmap_ros" type="rtabmap" output="screen" args="$(arg rtabmap_args)">
            <param name="database_path"       type="string" value="$(arg database_path)"/>
            <param name="frame_id" type="string" value="base_link"/>
            <param name="odom_frame_id" type="string" value="odom"/>

            <param name="subscribe_depth" type="bool" value="true"/>
            <param name="subscribe_rgb" type="bool" value="true"/>
            <param name="approx_sync" type="bool" value="false"/>

            <remap from="rgb/image"       to="/camera/color/image_raw"/>
            <remap from="depth/image"     to="/camera/aligned_depth_to_color/image_raw"/>
            <remap from="rgb/camera_info" to="/camera/color/camera_info"/>

            <!-- When sending goals on /rtabmap/goal topic, use actionlib to communicate with move_base -->
            <param name="use_action_for_goal" type="bool" value="true"/>
            <remap from="move_base"            to="/move_base"/>

            <!-- Remap to /map for move_base -->
            <remap from="grid_map" to="/map"/>


            <!-- RTAB-Map's parameters: do "rosrun rtabmap rtabmap (double-dash)params" to see the list of available parameters. -->
            <param name="RGBD/ProximityBySpace"        type="string" value="true"/>   <!-- Local loop closure detection (using estimated position) with locations in WM -->
            <param name="RGBD/OptimizeFromGraphEnd"    type="string" value="false"/>  <!-- Set to false to generate map correction between /map and /odom -->
            <param name="Kp/MaxDepth"                  type="string" value="4.0"/>
            <param name="Kp/DetectorStrategy"          type="string" value="8"/>  <!-- 0=SURF 1=SIFT 2=ORB 3=FAST/FREAK 4=FAST/BRIEF 5=GFTT/FREAK 6=GFTT/BRIEF 7=BRISK 8=GFTT/ORB 9=KAZE 10=ORB-OCTREE 11=SuperPoint Torch.] -->
            <param name="Reg/Strategy"                 type="string" value="0"/>      <!-- Loop closure transformation: 0=Visual, 1=ICP, 2=Visual+ICP -->
            <param name="Icp/CorrespondenceRatio"      type="string" value="0.3"/>
            <param name="Vis/MinInliers"               type="string" value="15"/>      <!-- 3D visual words minimum inliers to accept loop closure -->
            <param name="Vis/InlierDistance"           type="string" value="0.1"/>    <!-- 3D visual words correspondence distance -->
            <param name="RGBD/AngularUpdate"           type="string" value="0.1"/>    <!-- Update map only if the robot is moving -->
            <param name="RGBD/LinearUpdate"            type="string" value="0.1"/>    <!-- Update map only if the robot is moving -->
            <param name="RGBD/ProximityPathMaxNeighbors" type="string" value="0"/>
            <param name="Rtabmap/TimeThr"              type="string" value="0"/>
            <param name="Mem/RehearsalSimilarity"      type="string" value="0.30"/>
            <param name="Reg/Force3DoF"                type="string" value="true"/>
            <!-- <param name="GridGlobal/MinSize"           type="string" value="20"/> -->
            <param name="Grid/MaxGroundHeight" value="0.1"/>
            <param name="Grid/MaxObstacleHeight" value="0.35"/>
            <!-- <param name="SURF/GpuVersion"              type="string" value="true"/> -->
            <!-- <param name="ORB/Gpu"                      type="string" value="true"/> -->


            <!-- localization mode -->
            <param     if="$(arg localization)" name="Mem/IncrementalMemory" type="string" value="false"/>
            <param unless="$(arg localization)" name="Mem/IncrementalMemory" type="string" value="true"/>
            <param name="Mem/InitWMWithAllNodes" type="string" value="$(arg localization)"/>
        </node>
    </group>

</launch>
