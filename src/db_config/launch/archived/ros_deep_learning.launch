<launch>
    <!-- IMAGE NET -->
    <!-- <arg name="model_name" default="googlenet"/>
    <arg name="model_path" default=""/>
    <arg name="prototxt_path" default=""/>
    <arg name="class_labels_path" default=""/>
    <arg name="input_blob" default=""/>
    <arg name="output_blob" default=""/>

    <node pkg="ros_deep_learning" type="imagenet" name="imagenet" output="log">
        <remap from="/imagenet/image_in" to="/camera/color/image_raw"/>
        <param name="model_name" value="$(arg model_name)"/>
        <param name="model_path" value="$(arg model_path)"/>
        <param name="prototxt_path" value="$(arg prototxt_path)"/>
        <param name="class_labels_path" value="$(arg class_labels_path)"/>
        <param name="input_blob" value="$(arg input_blob)"/>
        <param name="output_blob" value="$(arg output_blob)"/>
    </node> -->

    <!-- SEGNET -->
    <!-- <arg name="model_name" default="fcn-resnet18-mhp-512x320"/> -->
    <!-- <arg name="model_name" default="fcn-resnet18-sun-512x400"/>
    <arg name="model_path" default=""/>
    <arg name="prototxt_path" default=""/>
    <arg name="class_labels_path" default=""/>
    <arg name="class_colors_path" default=""/>
    <arg name="input_blob" default=""/>
    <arg name="output_blob" default=""/>
    <arg name="mask_filter" default="linear"/>
    <arg name="overlay_filter" default="linear"/>
    <arg name="overlay_alpha" default="180.0"/>

    <node pkg="ros_deep_learning" type="segnet" name="segnet" output="log">
        <remap from="/segnet/image_in" to="/camera/color/image_raw"/>
        <param name="model_name" value="$(arg model_name)"/>
        <param name="model_path" value="$(arg model_path)"/>
        <param name="prototxt_path" value="$(arg prototxt_path)"/>
        <param name="class_labels_path" value="$(arg class_labels_path)"/>
        <param name="class_colors_path" value="$(arg class_colors_path)"/>
        <param name="input_blob" value="$(arg input_blob)"/>
        <param name="output_blob" value="$(arg output_blob)"/>
        <param name="mask_filter" value="$(arg mask_filter)"/>
        <param name="overlay_filter" value="$(arg overlay_filter)"/>
        <param name="overlay_alpha" value="$(arg overlay_alpha)"/>
    </node> -->

    <!-- <arg name="image_throttle_rate" default="10.0"/>
    <node type="throttle" name="detect_image_topic_throttle" pkg="topic_tools" required="true" output="log"
        args="messages /camera/color/image_raw $(arg image_throttle_rate) /camera/color/detect_image_raw_throttled"/> -->

    <!-- <arg name="model_name" default="ssd-mobilenet-v2"/> -->
    <!-- <arg name="model_name" default="ssd-inception-v2"/> -->
    <arg name="model_name" default=""/>
    <arg name="model_path" default="/home/ben/object-recognition/jetson-inference/python/training/detection/ssd/models/dodobot_objects/mb2-ssd-lite.onnx"/>
    <!-- <arg name="model_path" default=""/> -->
    <arg name="prototxt_path" default=""/>
    <arg name="class_labels_path" default="/home/ben/object-recognition/jetson-inference/python/training/detection/ssd/models/dodobot_objects/labels.txt"/>
    <!-- <arg name="class_labels_path" default=""/> -->
    <arg name="input_blob" default="input_0"/>
    <arg name="output_cvg" default="scores"/>
    <arg name="output_bbox" default="boxes"/>
    <arg name="overlay_flags" default="box,labels,conf"/>
    <arg name="mean_pixel_value" default="0.0"/>
    <arg name="threshold" default="0.3"/>

    <node pkg="ros_deep_learning" type="detectnet" name="detectnet" output="log">
        <remap from="/detectnet/image_in" to="/camera/color/image_raw"/>
        <param name="model_name" value="$(arg model_name)"/>
        <param name="model_path" value="$(arg model_path)"/>
        <param name="prototxt_path" value="$(arg prototxt_path)"/>
        <param name="class_labels_path" value="$(arg class_labels_path)"/>
        <param name="input_blob" value="$(arg input_blob)"/>
        <param name="output_cvg" value="$(arg output_cvg)"/>
        <param name="output_bbox" value="$(arg output_bbox)"/>
        <param name="overlay_flags" value="$(arg overlay_flags)"/>
        <param name="mean_pixel_value" value="$(arg mean_pixel_value)"/>
        <param name="threshold" value="$(arg threshold)"/>
    </node>
</launch>
